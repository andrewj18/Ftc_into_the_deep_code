package org.firstinspires.ftc.teamcode.Base;

import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.Servo;
import com.qualcomm.robotcore.hardware.TouchSensor;
import com.qualcomm.robotcore.eventloop.opmode.OpMode;

@TeleOp(name = "DriverControl")
public class DriverControl extends RobotStructure {

    @Override
    public void init() {
        super.init(); // Ensure RobotStructure's initialization happens
    }

    @Override
    public void loop() {
        // Run motor and servo control logic
        initDriver();
        controlMotors();
        controlServos();
        updateTelemetry();
    }

    private void initDriver() {
        float gamepad1LeftY = gamepad1.left_stick_y;
        float gamepad1LeftX = gamepad1.left_stick_x;
        float gamepad2RightY = gamepad2.right_stick_y;
        float gamepad1RightX = -gamepad1.right_stick_x;
        float gamepad2LeftY = gamepad2.left_stick_y;

        // Adjust the signs for translation
        float translation = -gamepad1LeftX;
        float rotation = gamepad1RightX;

        float frontRightPower = -gamepad1LeftY + translation + rotation;
        float frontLeftPower = -gamepad1LeftY - translation - rotation;
        float backLeftPower = -gamepad1LeftY + translation - rotation;
        float backRightPower = -gamepad1LeftY - translation + rotation;

        motorFrontLeft.setPower(-frontLeftPower / 1.5);
        motorBackLeft.setPower(-backLeftPower / 1.5);
        motorFrontRight.setPower(-frontRightPower / 1.5);
        motorBackRight.setPower(-backRightPower / 1.5);

    }
//Start
     public void runArms() {
     // Run motors when button A is pressed, until the touch sensor is pressed
         if (gamepad1.a) {
             ArmOne.setPower(0.75);
             ArmTwo.setPower(0.75);
         } else if (gamepad1.y) {
             ArmOne.setPower(-0.5);
            ArmTwo.setPower(-0.5);
         } else {
             ArmOne.setPower(0);
             ArmTwo.setPower(0);
         }
 
         // Stop motors if the touch sensor is pressed
      
// End
}
     public void runLifts() {
              // Run motors when button a on gamepad2 is pressed, until the touch sensor is pressed
   if (gamepad1.x) {
        // liftLeft , liftRight

            liftLeft.setPower(0.75);
             liftRight.setPower(-0.75);
         } else if (gamepad1.b) {
             liftLeft.setPower(-0.75);
            liftRight.setPower(0.75);
         }
         // to hold the lift in place
        else if (gamepad1.left_bumper) {
             liftLeft.setPower(0.1);
            liftRight.setPower(-0.1);
         }
         else {
             liftLeft.setPower(0);
             liftRight.setPower(0);
         }
         //End
     }
     
    private void controlMotors() {
        
        if (gamepad1.a) {
            ArmOne.setPower(0.75); // Forward
            ArmTwo.setPower(0.75);
        } else if (gamepad1.y) {
            ArmOne.setPower(-0.5); // Backward
            ArmTwo.setPower(-0.5);
        } else {
            ArmOne.setPower(0); // Stop
            ArmTwo.setPower(0);
        }

        if (!touch.isPressed()) { // Active low sensor
            ArmOne.setPower(0);
            ArmTwo.setPower(0);
        }
         if (gamepad1.x) {
        // liftLeft , liftRight

            liftLeft.setPower(0.75);
            liftRight.setPower(-0.75);
         } else if (gamepad1.b) {
             liftLeft.setPower(-0.75);
            liftRight.setPower(0.75);
         } 
           // to hold the lift in place
        else if (gamepad1.left_bumper) {
             liftLeft.setPower(0.1);
            liftRight.setPower(-0.1);
         }
         else {
             liftLeft.setPower(0);
             liftRight.setPower(0);
         }
    }

    private void controlServos() {
        if (gamepad2.a) {
            clawServo.setPosition(0.40); // Set servoTwo to 0.40 when button A is pressed
        }
        if (gamepad2.b) {
            clawServo.setPosition(0.10); // Set servoTwo to 0.10 when button B is pressed
        }
        
        
        
        if (gamepad2.y) {
            servoOne.setPosition(0.36); // Set servoOne to 0.36 when button Y is pressed
        }

        if (gamepad2.x) {
            servoOne.setPosition(0.15); // Set servoOne to 0.15 when button X is pressed
        }
        //code for bucket servo
        if (gamepad2.left_bumper) {
            bucketServo.setPosition(0.40); // Set bucketServo to 0.40 when button left bumper is pressed
        }
        if (gamepad2.right_bumper) {
            bucketServo.setPosition(0.10); // Set bucketServo to 0.10 when right bumper is pressed
        }
    }
    public void setDriverMotorPower(double FRightPower, double FLeftPower, double BRightPower, double BLeftPower) {
        motorFrontRight.setPower(FRightPower);
        motorFrontLeft.setPower(FLeftPower);
        motorBackRight.setPower(BRightPower);
        motorBackLeft.setPower(BLeftPower);
    }
    private void updateTelemetry() {
        boolean touchState = touch.isPressed(); // Get touch sensor state
        telemetry.addData("Touch Sensor", touchState ? "Released" : "Pressed");
        telemetry.update(); // Update telemetry display
    }
}
